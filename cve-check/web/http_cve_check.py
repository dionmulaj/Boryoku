PORTS = [80, 443]

CVE_MAPPINGS = {
    "Apache/2.4.49": "CVE-2021-41773",
    "Apache/2.4.50": "CVE-2021-42013",
    "Apache/2.4.38": "CVE-2019-0211",
    "Apache/2.4.29": "CVE-2017-15715",
    "Apache/2.2.22": "CVE-2012-0053",
    "Apache/2.4.7": "CVE-2014-0226",
    "Apache/2.4.18": "CVE-2016-0736",
    "Apache/2.4.10": "CVE-2014-3583",
    "Apache/2.2.15": "CVE-2011-3192",
    "Apache/2.2.8": "CVE-2008-2939",
    "Apache/2.0.63": "CVE-2008-0455",
    "nginx/1.4.0": "CVE-2013-4547",
    "nginx/1.3.9": "CVE-2013-2077",
    "nginx/1.6.2": "CVE-2014-3616",
    "nginx/1.8.0": "CVE-2015-8000",
    "nginx/1.10.0": "CVE-2016-4450",
    "nginx/1.12.2": "CVE-2017-7529",
    "nginx/1.14.0": "CVE-2018-16843",
    "nginx/1.16.1": "CVE-2019-20372",
    "nginx/1.17.6": "CVE-2019-20372",
    "Microsoft-IIS/7.5": "CVE-2010-2730",
    "Microsoft-IIS/8.0": "CVE-2013-1305",
    "Microsoft-IIS/8.5": "CVE-2015-1635",
    "Microsoft-IIS/6.0": "CVE-2009-1535",
    "Microsoft-IIS/5.0": "CVE-2001-0500",
    "Microsoft-IIS/5.1": "CVE-2002-0364",
    "Microsoft-IIS/4.0": "CVE-1999-1532",
    "Microsoft-IIS/3.0": "CVE-1997-0226",
    "Microsoft-IIS/2.0": "CVE-1997-0227",
    "Microsoft-IIS/7.0": "CVE-2008-0077",
    "Microsoft-IIS/8.0": "CVE-2013-1330",
    "Apache Tomcat/7.0.0": "CVE-2011-1184",
    "Apache Tomcat/7.0.39": "CVE-2013-2067",
    "Apache Tomcat/8.0.0": "CVE-2014-0050",
    "Apache Tomcat/8.5.0": "CVE-2016-6796",
    "Apache Tomcat/9.0.0": "CVE-2017-5647",
    "Apache Tomcat/9.0.10": "CVE-2018-8037",
    "Apache Tomcat/10.0.0": "CVE-2020-1938",
    "Apache Tomcat/10.1.0": "CVE-2022-23181",
    "Apache Tomcat/6.0.0": "CVE-2009-2693",
    "Apache Tomcat/5.5.0": "CVE-2007-2449"
}

def run(host, results):
    import requests
    import re
    for port in [80, 443]:
        proto = "https" if port == 443 else "http"
        url = f"{proto}://{host}:{port}/"
        try:
            resp = requests.get(url, timeout=7, verify=False)
            server = resp.headers.get("Server", "N/A")
            found_version = None
            for key in CVE_MAPPINGS:
                if key in server:
                    found_version = key
                    break
            if not found_version:
                meta_match = re.search(r'<meta[^>]+content=["\'](Apache|nginx|Microsoft-IIS|Apache Tomcat)/?([0-9.]+)["\']', resp.text, re.IGNORECASE)
                if meta_match:
                    server_type = meta_match.group(1)
                    server_version = meta_match.group(2)
                    for key in CVE_MAPPINGS:
                        if key.startswith(server_type) and key.endswith(server_version):
                            found_version = key
                            break
            cve = CVE_MAPPINGS.get(found_version)
            if cve:
                results[host].setdefault("CVE-CHECK", []).append(
                    f"Potential CVE: {cve} via HTTP server version: {found_version}")
        except Exception:
            pass  
