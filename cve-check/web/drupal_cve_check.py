PORTS = [80, 443]

CVE_MAPPINGS = {
    "Drupal/7.32": "CVE-2014-3704",
    "Drupal/8.3.7": "CVE-2017-6925",
    "Drupal/8.5.0": "CVE-2018-7600",
    "Drupal/8.6.9": "CVE-2019-6342",
    "Drupal/8.7.4": "CVE-2019-6340",
    "Drupal/8.8.1": "CVE-2019-6339",
    "Drupal/9.0.0": "CVE-2020-13663",
    "Drupal/9.1.0": "CVE-2020-13671",
    "Drupal/9.2.0": "CVE-2021-22900",
    "Drupal/9.3.0": "CVE-2022-25277"
}

def run(host, results):
    import requests
    import re
    for port in [80, 443]:
        proto = "https" if port == 443 else "http"
        url = f"{proto}://{host}:{port}/"
        try:
            resp = requests.get(url, timeout=7, verify=False)
            x_generator = resp.headers.get("X-Generator", "N/A")
            found_version = None
            for key in CVE_MAPPINGS:
                if key in x_generator:
                    found_version = key
                    break
            if not found_version:
                meta_match = re.search(r'<meta[^>]+name=["\']generator["\'][^>]+content=["\']Drupal/?([0-9.]+)["\']', resp.text, re.IGNORECASE)
                if meta_match:
                    drupal_version = meta_match.group(1)
                    for key in CVE_MAPPINGS:
                        if key.endswith(drupal_version):
                            found_version = key
                            break
            cve = CVE_MAPPINGS.get(found_version)
            if cve:
                results[host].setdefault("CVE-CHECK", []).append(
                    f"Potential CVE detected: {cve} via Drupal version: {found_version}")
        except Exception:
            pass  
