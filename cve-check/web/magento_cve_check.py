PORTS = [80, 443]

CVE_MAPPINGS = {
    "Magento/1.9.0.1": "CVE-2014-9833",
    "Magento/2.0.0": "CVE-2015-1397",
    "Magento/2.1.0": "CVE-2016-4010",
    "Magento/2.2.0": "CVE-2017-1000450",
    "Magento/2.3.0": "CVE-2018-7602",
    "Magento/2.3.1": "CVE-2019-7873",
    "Magento/2.3.2": "CVE-2019-8144",
    "Magento/2.3.3": "CVE-2019-8145",
    "Magento/2.3.4": "CVE-2020-3719",
    "Magento/2.4.0": "CVE-2020-24407"
}

def run(host, results):
    import requests
    import re
    for port in [80, 443]:
        proto = "https" if port == 443 else "http"
        url = f"{proto}://{host}:{port}/"
        try:
            resp = requests.get(url, timeout=7, verify=False)
            x_generator = resp.headers.get("X-Generator", "N/A")
            found_version = None
            for key in CVE_MAPPINGS:
                if key in x_generator:
                    found_version = key
                    break
            if not found_version:
                meta_match = re.search(r'<meta[^>]+name=["\']generator["\'][^>]+content=["\']Magento/?([0-9.]+)["\']', resp.text, re.IGNORECASE)
                if meta_match:
                    magento_version = meta_match.group(1)
                    for key in CVE_MAPPINGS:
                        if key.endswith(magento_version):
                            found_version = key
                            break
            cve = CVE_MAPPINGS.get(found_version)
            if cve:
                results[host].setdefault("CVE-CHECK", []).append(
                    f"Potential CVE detected: {cve} via Magento version: {found_version}")
        except Exception:
            pass  
