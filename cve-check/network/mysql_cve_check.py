PORTS = [3306]

CVE_MAPPINGS = {
    "5.5.20": "CVE-2012-2122",
    "5.1.63": "CVE-2012-2122",
    "5.6.10": "CVE-2013-0375",
    "5.7.19": "CVE-2017-3302",
    "5.0.51a": "CVE-2008-0226",
    "5.5.23": "CVE-2012-5611",
    "5.6.16": "CVE-2014-0001",
    "5.7.17": "CVE-2017-3303",
    "5.1.73": "CVE-2014-0001",
    "5.0.45": "CVE-2008-2079",
    "5.7.18": "CVE-2018-3063",
    "5.6.20": "CVE-2015-4752",
    "5.5.40": "CVE-2015-4792",
    "5.1.72": "CVE-2013-3839",
    "5.0.67": "CVE-2008-4098",
    "5.6.21": "CVE-2015-4802",
    "5.7.20": "CVE-2018-3258",
    "5.5.41": "CVE-2015-4819",
    "5.6.22": "CVE-2016-6662",
    "5.7.21": "CVE-2018-3282"
}

def run(host, results):
    import socket
    try:
        s = socket.socket()
        s.settimeout(5)
        s.connect((host, 3306))
        banner = s.recv(1024).decode(errors='ignore')
        cve = None
        for key, val in CVE_MAPPINGS.items():
            if key in banner:
                cve = val
                break
            if cve:
                results[host].setdefault("CVE-CHECK", []).append(f"Potential CVE detected: {cve} via MySQL banner: {banner.strip()}")
        s.close()
    except Exception:
        pass 
